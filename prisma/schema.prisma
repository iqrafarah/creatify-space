datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  createdAt DateTime @default(now())

  // Relations
  tokens      VerificationToken[]
  profile     Profile?
  experiences Experience[]
  skills      Skill[]
  Footer      Footer?
}

model VerificationToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([token])
}

model Profile {
  id               String   @id @default(cuid())
  userId           String   @unique
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  available        Boolean  @default(false)  
  isPublished      Boolean  @default(false)  
  name             String?
  headline         String?
  shortDescription String?
  summary          String?  @db.Text
  imageUrl         String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Experience {
  id        String   @id @default(cuid())
  userId    String
  company   String
  title     String
  duration  String
  logo      String?
  order     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Skill {
  id        String   @id @default(cuid())
  userId    String
  name      String
  order     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, name])
  @@index([userId])
}

model Footer {
  id          String @id @default(cuid())
  userId      String @unique 
  user        User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  title       String
  description String
  contactUrl  String
}

model RateLimit {
  id        String   @id @default(cuid())
  ip        String   
  timestamp DateTime @default(now())

  @@index([ip, timestamp])
}